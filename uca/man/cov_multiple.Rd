% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_bisection_methods.R
\name{cov_multiple}
\alias{cov_multiple}
\title{UCA for multiple backgrounds using covariance matrices}
\usage{
cov_multiple(
  A,
  B,
  lambda = NULL,
  nv = 2L,
  max_iter = 100000L,
  tol = 1e-06,
  algo = "bisection",
  ...
)
}
\arguments{
\item{A}{Target Covariance Matrix}

\item{B}{list of background covariance(s).}

\item{lambda}{initial guess for Lagrange Multiplier. Default NULL.
algo = "bisection" only}

\item{nv}{number of uca components to estimate}

\item{max_iter}{maximum iterations for all algorithms if tolerance is not
reached. default 1E5.}

\item{tol}{tolerance for stopping criteria for all algorithms. default 1E-6}

\item{algo}{which algorithm to use. default algo == "bisection". If
algo = "cd", L-BFGS-B optimization is used instead for coordinate descent.
algo = "gd" than L-BFGS-B optimizes all lambdas simultaenously with gradient
descent}

\item{...}{additional parameters to pass in to `bisection()` and
`optim_cov_cd()`}
}
\value{
list of three elements:
\itemize{
 \item tau: the optimal lagrange multiplier(s)
 \item values: eigenvalue associated with tau(s)
 \item vectors: top `nv` eigenvectors associated with tau(s)
}
}
\description{
Wrapper function for UCA with multiple background datasets with covariance
matrices. Use different algorithms to find the optimal Lagrangian
}
